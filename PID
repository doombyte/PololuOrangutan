#include <OrangutanAnalog.h>
#include <OrangutanMotors.h>

OrangutanMotors motors;
OrangutanAnalog analog;

int motorSpeed = 100 ; 

void setup()                
{Serial.begin(9600);
pinMode (PC0,INPUT); //SENSOR 1
pinMode (PC1,INPUT); //SENSOR 2
pinMode (PC2,INPUT); //SENSOR 3
pinMode (PC3,INPUT); //SENSOR 4
pinMode (PC4,INPUT); //SENSOR 5
pinMode (PC5,INPUT); //SENSOR 6
pinMode (ADC6,INPUT); //SENSOR 7
pinMode (ADC7,INPUT); //SENSOR 8


}

void loop()                     
{
int  SensorsValue0 = analogRead(PC0); //lee sensor 0  y asigna a pot

        //SensorsValue0 = constrain(SensorsValue0, 0, 100); // DEFINIR LIMITE DE VALOR DE SENSOR A X
        // SensorsValue0 = map(SensorsValue0,0,100,0,1000); // ESCALAR X A Y 
        Serial.print(SensorsValue0);
        delay (500);
        char espacio ("      ");
        Serial.print(espacio);

 
int SensorsValue1 = analogRead(PC1); //lee sensor 0  y asigna a pot

       //SensorsValue1 = constrain(SensorsValue1, 0, 100); // DEFINIR LIMITE DE VALOR DE SENSOR A X
       // SensorsValue1 = map(SensorsValue1,0,100,0,1000);  // ESCALAR X A Y 
       Serial.print(SensorsValue1);
       delay (500);
       Serial.print(espacio);
       
int SensorsValue2 = analogRead(PC2); //lee sensor 0  y asigna a pot
      //SensorsValue2 = constrain(SensorsValue2, 0, 100);  // DEFINIR LIMITE DE VALOR DE SENSOR A X
      // SensorsValue2 = map(SensorsValue2,0,100,0,1000);  // ESCALAR X A Y 
      Serial.print(SensorsValue2);
      delay (500);
      Serial.print(espacio);
      
int SensorsValue3 = analogRead(PC3); //lee sensor 0  y asigna a pot
      //SensorsValue3 = constrain(SensorsValue3, 0, 100);  // DEFINIR LIMITE DE VALOR DE SENSOR A X
      // SensorsValue3 = map(SensorsValue3,0,100,0,1000);  // ESCALAR X A Y 
      Serial.print(SensorsValue3);
      delay (500);
      Serial.print(espacio);
      
int SensorsValue4 = analogRead(PC4); //lee sensor 0  y asigna a pot
      //SensorsValue4 = constrain(SensorsValue4, 0, 100);  // DEFINIR LIMITE DE VALOR DE SENSOR A X
      // SensorsValue4 = map(SensorsValue4,0,100,0,1000);  // ESCALAR X A Y 
      Serial.print(SensorsValue2);
      delay (500);
      Serial.print(espacio);

int SensorsValue5 = analogRead(PC5); //lee sensor 0  y asigna a pot
      //SensorsValue5 = constrain(SensorsValue5, 0, 100);  // DEFINIR LIMITE DE VALOR DE SENSOR A X
      // SensorsValue5 = map(SensorsValue5,0,100,0,1000);  // ESCALAR X A Y 
      Serial.print(SensorsValue2);
      delay (500);
      Serial.print(espacio);
      
int SensorsValue6 = analogRead(ADC6); //lee sensor 0  y asigna a pot
      //SensorsValue6 = constrain(SensorsValue6, 0, 100);  // DEFINIR LIMITE DE VALOR DE SENSOR A X
      // SensorsValue6 = map(SensorsValue6,0,100,0,1000);  // ESCALAR X A Y 
      Serial.print(SensorsValue6);
      delay (500);
      Serial.print(espacio);
      
int SensorsValue7 = analogRead(ADC7); //lee sensor 0  y asigna a pot
     //SensorsValue7 = constrain(SensorsValue7, 0, 100); // DEFINIR LIMITE DE VALOR DE SENSOR A X
     // SensorsValue7 = map(SensorsValue7,0,100,0,1000);  // ESCALAR X A Y 
     Serial.println(SensorsValue7);
     delay (500);

 //Suma_Valores= SensorsValue0 + SensorsValue2 + SensorsValue3 + SensorsValue4 + SensorsValue5 + SensorsValue6 + SensorsValue7 ;

 if (SensorsValue0 == 100){  //Si esta en negro 
 Suma_Valores= SensorsValue0 * 10;
 Contador ++;
 }
 if (SensorsValue1 == 100){
  Suma_Valores = Suma_Valores + SensorsValue1 * 20;
 Contador ++;
 }
 if (SensorsValue2 == 100){
    Suma_Valores = Suma_Valores + SensorsValue2 *30;
 Contador ++;
 }
 if (SensorsValue3 == 100){
    Suma_Valores = Suma_Valores + SensorsValue3 * 40;
 Contador ++;
 }
 if (SensorsValue4 == 100){
    Suma_Valores = Suma_Valores + SensorsValue4 *50;
 Contador ++;
 }
 if (SensorsValue5 == 100){
    Suma_Valores = Suma_Valores + SensorsValue5 *60;
 Contador ++;
 }
 if (SensorsValue6 == 100){
    Suma_Valores = Suma_Valores + SensorsValue6 *70;
Contador ++;
 }
 if (SensorsValue7 == 100){
    Suma_Valores = Suma_Valores + SensorsValue7 *80;
 Contador ++;
 }
 
Posicion = Suma_Valores / Contador ;
 
Restaurar();
 
void Restaurar(){
    Contador = 0;
    Suma_Valores = 0; } 

Kp = Posicion;
Kd = Kp - last_Kp;
Ki += Kd ;
last_Kp = Kp;

Diferencia = Kp / VP + Ki *0 +kd * VD;


if (Diferencia > maximo){   
    Diferencia = maximo;    
}
if (Diferencia < -maximo){   
    Diferencia = -maximo;   
}
// ASIGNAR, VELOCIDAD CALCULADA  EN LA DIFERENCIA DE LOS MOTORES (Diferencia)
if (Diferencia < 0) {                                               
    OrangutanMotors::setSpeeds(maximo, maximo + Diferencia);    
}     
else{                                                                      
    OrangutanMotors::setSpeeds(maximo - Diferencia, maximo);        
} 

}
